// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
       google()
       jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        {%- for repo in args.gradle_repositories %}
        {{repo}}
        {%- endfor %}
        flatDir {
            dirs 'libs'
        }
    }
}

{% if is_library %}
apply plugin: 'com.android.library'
{% else %}
apply plugin: 'com.android.application'
{% endif %}

android {
    compileSdkVersion 27
    buildToolsVersion '{{ build_tools_version }}'
    defaultConfig {
        minSdkVersion {{ args.min_sdk_version }}
        targetSdkVersion {{ android_api }}
        versionCode {{ args.numeric_version }}
        versionName '{{ args.version }}'
    }

	{% if debug_build -%}
	packagingOptions {
		doNotStrip '**/*.so'
	}
	{%- endif %}

    signingConfigs {
        {% if not args.sign -%}
        debug {
            storeFile file(System.getenv("P4A_DEBUG_KEYSTORE"))
            keyAlias System.getenv("P4A_DEBUG_KEYALIAS")
            storePassword System.getenv("P4A_DEBUG_KEYSTORE_PASSWD")
            keyPassword System.getenv("P4A_DEBUG_KEYALIAS_PASSWD")
        }
        {%- endif %}
        {% if args.sign -%}
        release {
            storeFile file(System.getenv("P4A_RELEASE_KEYSTORE"))
            keyAlias System.getenv("P4A_RELEASE_KEYALIAS")
            storePassword System.getenv("P4A_RELEASE_KEYSTORE_PASSWD")
            keyPassword System.getenv("P4A_RELEASE_KEYALIAS_PASSWD")
        }
        {%- endif %}
    }

    {% if args.packaging_options -%}
    packagingOptions {
        {%- for option in args.packaging_options %}
        {{option}}
        {%- endfor %}
    }
    {%- endif %}

    buildTypes {
        debug {
            {% if not args.sign -%}
            signingConfig signingConfigs.debug
            {%- endif %}
        }
        release {
            {% if args.sign -%}
            signingConfig signingConfigs.release
            {%- endif %}
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
        {%- for option in args.compile_options %}
        {{option}}
        {%- endfor %}
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
            java {

                {%- for adir, pattern in args.extra_source_dirs -%}
                    srcDir '{{adir}}'
                {%- endfor -%}

            }
        }
    }

}

dependencies {
    {%- for aar in aars %}
    compile(name: '{{ aar }}', ext: 'aar')
    {%- endfor -%}
    {%- for jar in jars %}
    compile files('src/main/libs/{{ jar }}')
    {%- endfor -%}
    {%- if args.depends -%}
    {%- for depend in args.depends %}
    compile '{{ depend }}'
    {%- endfor %}
    {%- endif %}
}
